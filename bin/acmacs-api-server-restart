#! /bin/bash

fail()
{
    echo ERROR: "$@" >&2
    exit 1
}

trap fail ERR

# ----------------------------------------------------------------------

if [[ ! -d "${ACMACSD_ROOT}" ]]; then
    export ACMACSD_ROOT="${HOME}/AD"
fi

HOSTNAME=$(hostname)
if [[ "${HOSTNAME}" != "i19" && "${HOSTNAME}" != "i22" ]]; then
    fail "Usupported host: ${HOSTNAME}"
fi

SERVER_ROOT=/syn/eu/acmacs-api-server/${HOSTNAME}
if [[ ! -d "${SERVER_ROOT}" ]]; then
    fail "No SERVER_ROOT dir: ${SERVER_ROOT}"
fi

NOW=$(date "+%Y-%m%d-%H%M")
LOG_DIR="${SERVER_ROOT}/log"

pkill -f 'acmacs-api-server-keep-running' || true
pkill -f 'acmacs-api-server.+settings.json' || true

# rotate log
if [[ -f "${LOG_DIR}/stdout.log" ]]; then
    mkdir -p "${LOG_DIR}/old"
    for log in "${LOG_DIR}/"*.log; do
        bn=$(basename "${log}")
        /usr/bin/xz -9ec "${LOG_DIR}/${bn}" > "${LOG_DIR}/old/${NOW}.${bn}.xz"
        /bin/rm "${LOG_DIR}/${bn}"
    done
fi

echo "log files are in ${LOG_DIR}"
echo "using settings from ${SERVER_ROOT}/settings.json"

cd ${SERVER_ROOT}
nohup ${ACMACSD_ROOT}/bin/acmacs-api-server-keep-running >"${LOG_DIR}/acmacs-api-server-keep-running.log" 2>&1 </dev/null &

# ${ACMACSD_ROOT}/bin/acmacs-api-server "${SERVER_ROOT}/settings.json" >"${LOG_DIR}/stdout.log" 2>"${LOG_DIR}/stderr.log" </dev/null &
# WAIT_TIME=20
# echo "waiting ${WAIT_TIME} seconds for acmacs-api-server to start"
# sleep ${WAIT_TIME}
# if ! pgrep -f acmacs-api-server >/dev/null 2>&1; then
#     ldd ${ACMACSD_ROOT}/bin/acmacs-api-server
#     fail "${ACMACSD_ROOT}/bin/acmacs-api-server not started, see /scp:${HOSTNAME}:${LOG_DIR}/stderr.log"
# fi
