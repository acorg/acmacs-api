# -*- Makefile -*-
# Eugene Skepner 2017

# ----------------------------------------------------------------------

MAKEFLAGS = -w

# ----------------------------------------------------------------------

APP_ONE = $(DIST)/app-one.js.gz $(DIST)/app-one.css.gz
APP_ONE_SRC = app-one.cc $(COMMON_SRC) sass/app-one.sass

COMMON_SRC = asm.cc application.cc handler.cc login.cc login-widget.cc

TARGETS = $(APP_ONE)

# ----------------------------------------------------------------------

OPTIMIZATION = -O3
CHEERP = /opt/cheerp/bin/clang++ -target cheerp
CHEERP_COMPILE_FLAGS = -std=c++1z -MMD -I. -Iinclude -g $(OPTIMIZATION) $(WEVERYTHING) -Wno-unknown-pragmas
# --cheerp-preexecute
CHEERP_LINK_FLAGS = $(OPTIMIZATION)

SASSC = sassc

# ----------------------------------------------------------------------

all: checks $(TARGETS)

install: checks $(TARGETS)

test: install
	test/test

checks: check-cheerp check-sassc

rtags:
	#make -nk | /usr/local/bin/rc --compile - || true

# ----------------------------------------------------------------------

-include $(BUILD)/*.d

# ----------------------------------------------------------------------

$(DIST)/app-one.js.gz: $(patsubst %.cc,$(BUILD)/%.bc,$(filter %.cc,$(APP_ONE_SRC)))
	$(call cheerp_link,$@,$^)

$(DIST)/app-one.css.gz: $(abspath $(filter %.sass,$(APP_ONE_SRC)))
	$(call sass,$@,$^)

$(BUILD)/%.bc: %.cc | $(BUILD)
	@echo "CHEERP     " $<
	@$(CHEERP) $(CHEERP_COMPILE_FLAGS) -c -o $@ $(abspath $<)

# ----------------------------------------------------------------------

check-cheerp:
ifeq ($(MAKE_CLIENT),1)
	@$(CHEERP) -v >/dev/null 2>&1 || ( echo "ERROR: Please install cheerp (http://leaningtech.com/cheerp/download/)" >&2 && false )
endif

check-sassc:
ifeq ($(MAKE_CLIENT),1)
	@$(SASSC) -v >/dev/null 2>&1 || ( echo "ERROR: Please install SASSC:" $(SASSC_INSTALL) >&2 && false )
endif

$(DIST):
	mkdir -p $(DIST)

$(BUILD):
	mkdir -p $(BUILD)

# ----------------------------------------------------------------------

# $(1) - target
# $(2) - sources
define cheerp_link
	@echo CHEERP-link $(notdir $(1)) $(2)
	@$(CHEERP) $(CHEERP_LINK_FLAGS) -o $(basename $(1)) $^ # -cheerp-sourcemap=$(basename $(1)).map
	@gzip -9f $(basename $(1))
	@if [ -f $(basename $(1)).map ]; then gzip -9f $(basename $(1)).map; fi
endef

# $(1) - target
# $(2) - source
define sass
	@echo "SASS       " $(notdir $@)
	@$(SASSC) --style compressed -I sass $(abspath $<) $(basename $@)
	@gzip -9f $(basename $@)
endef

# ======================================================================
### Local Variables:
### eval: (if (fboundp 'eu-rename-buffer) (eu-rename-buffer))
### End:
